name: my-pipeline

on: [push]

jobs:
  Build-And-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          npm install --frozen-lockfile
      - name: run unit tests
        run: |
          npm test

  auto-cancel-workflow-after-1-min:
    needs: [Build-And-Test]
    uses: ./.github/workflows/auto-cancel-pending.yml
    with:
      run_id: ${{github.run_id}}
      attempt_number: ${{github.run_attempt}}
      timeout_minutes: 1

  Create-New-Release:
    runs-on: ubuntu-latest
    environment: prod
    needs: [Print-Some-Stuff]
    concurrency: release_job
    timeout-minutes: 1
    steps:
      - name: Create release tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: "v0.0.${{github.run_number}}",
              message: "",
              object: "${{github.sha}}",
              type: "commit"
            })
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v0.0.${{github.run_number}}",
              sha: "${{github.sha}}"
            })

      - name: Create a github release
        uses: actions/github-script@v6
        with:
          script: |
            const {name, body} = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "refs/tags/v0.0.${{github.run_number}}"
            })

            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "refs/tags/v0.0.${{github.run_number}}",
              name: name,
              body: body,
              generate_release_notes: true
            })