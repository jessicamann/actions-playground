name: my-pipeline

on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."
  Build-And-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          npm install --frozen-lockfile
      - name: run unit tests
        run: |
          npm test
  Create-New-Release:
    runs-on: ubuntu-latest
    needs: [Build-And-Test]
    steps:
      - name: Check all parameters
        run: |
          echo "owner: ${{github.repository_owner}}"
          echo "repo: ${{github.repository}}"
          echo "tag: ${{github.run_number}}"
          echo "object: ${{github.sha}}"
          echo "tagger.name: ${{github.event.pusher.name}}"
          echo "tagger.email: ${{github.event.pusher.email}}"
      - name: Create release tag
        uses: actions/github-script@v6
        with:
          script: |
            echo "Hello!"
          # script: |
            # github.rest.git.createTag({
              # owner: context.repo.owner,
              # repo: context.repo.repo,
              # tag: "${{github.run_number}}",
              # message: 'new release tag',
              # type: 'commit',
              # object: "${{github.sha}}",
              # tagger: {
              #   name: ${{github.event.pusher.name}},
              #   email: ${{github.event.pusher.email}}
              # }
            # })
      - name: Generate release notes
        run: echo "📝 should use the github action here to create a release"